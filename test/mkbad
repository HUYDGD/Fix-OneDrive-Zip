#!/usr/bin/perl

# mkbad
#
# This is a hacked version of the 'fix-onedrive-zip' script.
# It is used for testing only. The script will take a well-formed zip file
# and modify it to have the issue that fix-onedrive-zip
# is used to address.
#

use strict;
use warnings;

use Fcntl qw(SEEK_SET SEEK_END);
use Getopt::Long;

# Signatures for the headers we need to check
use constant ZIP_LOCAL_HDR_SIG                 => 0x04034b50;
use constant ZIP_END_CENTRAL_HDR_SIG           => 0x06054b50;
use constant ZIP64_END_CENTRAL_LOC_HDR_SIG     => 0x07064b50;

sub Seek;
sub Read;

my $VERSION = '1.00' ;
my $dry_run ;

GetOptions ("dry-run" => \$dry_run)
    or Usage("Error in command line arguments\n");

Usage()
    unless @ARGV >= 1;

for my $filename (@ARGV)
{
    open my $fh,  "+<$filename"
        or die "Error: Cannot open '$filename': $!\n";
}

for my $filename (@ARGV)
{
    print "\nChecking '$filename'\n";
    open my $fh,  "+<$filename"
        or die "Cannot open '$filename': $!\n";

    my $data = Read $filename, $fh, 4;

    my $sig = unpack("V", $data) ;

    die "Error: No Zip signature at start of '$filename'\n"
        unless $sig == ZIP_LOCAL_HDR_SIG ;

    # Assume no comment or other trailing data
    # The last two things in the file are the Z64 & EOCD records

    Seek  $filename, $fh, -42 ;

    $data = Read $filename, $fh, 42;

    my $eocd = substr($data, 20);
    my $eocd_sig = unpack("V", substr($eocd, 0, 4)) ;

    die "Error: Cannot find Zip signature at end of '$filename'\n"
        unless $eocd_sig == ZIP_END_CENTRAL_HDR_SIG ;

    my $offset = unpack("VV", substr($eocd, 16, 4)) ;

    die sprintf "Error: bad offset 0x%X at end of '$filename'\n", $offset
        unless $offset == 0xFFFFFFFF ;

    my $z64_sig = unpack("V", substr($data, 0, 4)) ;

    die "Error: Cannot find Zip64 signature at end of '$filename'\n"
        unless $z64_sig == ZIP64_END_CENTRAL_LOC_HDR_SIG ;

    my $total_disks = unpack("V", substr($data, 16, 4)) ;

#    if ($total_disks == 1)
#    {
#        print "Nothing to do: 'Total Number of Disks' field is already 1\n";
#        next
#    }
#
#    if ($total_disks != 0)
#    {
#        die "Error: 'Total Number of Disks' field is $total_disks\n";
#    }

    Seek $filename, $fh, -42 + 16 ;

    if ($dry_run)
    {
        print "Dry-Run: No change made to '$filename'\n";
    }
    else
    {
        # This line creates the bad zip file
        print $fh pack "V", 0 ;
        print "Updated '$filename'\n";
    }
}

sub Seek
{
    my $filename = shift;
    my $fh = shift ;
    my $offset = shift ;

    seek $fh, $offset, SEEK_END
        or die "Cannot seek '$filename': $!\n" ;
}

sub Read
{
    my $filename = shift ;
    my $fh = shift;
    my $size = shift ;

    my $data ;

    read($fh, $data, $size) == $size
        or die "Cannot read from '$filename': $!\n" ;

    return $data;
}
